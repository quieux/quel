#!/bin/bash

######################################################################
# Autor     :   Ezequiel Carvalho <queldevelopment@gmail.com>        #
# Licença   :   MIT                                                  #
# Descrição :   Instalador de pacotes da distribuição Quieux Linux   #
######################################################################

# Deve ser executado como root
check_root() {
    if [ "$(id -u)" -ne 0 ]; then
        echo "Este script precisa ser executado como root. Escreva 'sudo' antes do 'quel'."
        exit 1
    fi
}

# Função para descompactar o pacote
extract_package() {
    local package_path=$1
    local package_name=$(basename "$package_path" .quel)
    local tmp_dir="/tmp/$package_name"
    
    mkdir -p "$tmp_dir"
    unsquashfs -f -d "$tmp_dir" "$package_path"

    if [ $? -ne 0 ]; then
        echo "#01 Erro ao descompactar o pacote."
        exit 1
    fi

    echo "Pacote descompactado com sucesso."

    # Lê qualquer arquivo de descrição dentro da pasta info (a descrição segue modelo descrito na documentação)
    for desc_file in "$tmp_dir/info/"*; do
        if [ -f "$desc_file" ]; then
            cat "$desc_file"
        fi
    done
}

# Função para instalar o pacote
install_package() {
    local package_path=$1
    local package_name=$(basename "$package_path" .quel)
    local tmp_dir="/tmp/$package_name"

    read -p "Deseja continuar com a instalação? (S/N): " response
    if [[ "$response" != "S" && "$response" != "s" ]]; then
        rm -rf "$tmp_dir"
        echo "Instalação cancelada."
        exit 0
    fi

    cp -r "$tmp_dir"/* /
    if [ $? -ne 0 ]; then
        echo "#02 Erro ao instalar o pacote."
        exit 1
    fi

    # Ajustar permissões para 777 em todos os arquivos listados no arquivo quel/<nome_do_pacote> sem extensão
    if [ -f "/quel/$package_name" ]; then
        while IFS= read -r file; do
            chmod 777 "/$file"
        done < "/quel/$package_name"
    fi

    echo "Instalação concluída com sucesso."
    rm -rf "$tmp_dir"
}

# Função para remover o pacote
remove_package() {
    local package_name=$1

    if [ ! -f "/quel/$package_name" ]; then
        echo "Programa não está instalado ou já foi removido."
        exit 1
    fi

    local file_count=$(wc -l < "/quel/$package_name")
    echo "Encontrados $file_count arquivos para remoção."

    read -p "Tem certeza que deseja remover o pacote $package_name? (S/N): " response
    if [[ "$response" != "S" && "$response" != "s" ]]; then
        echo "Remoção cancelada."
        exit 0
    fi

    while IFS= read -r file || [ -n "$file" ]; do
        if [ -n "$file" ]; then
            rm -f "$file"
        fi
    done < "/quel/$package_name"

    echo "Remoção concluída com sucesso."
    rm -f "/quel/$package_name"
}

# Função para atualizar o arquivo de repositório
update_repo_file() {
    local repo_url="https://quieux.github.io/update"
    local repo_file="/etc/quel/repo"

    wget -q "$repo_url" -O "$repo_file"
    if [ $? -ne 0 ]; then
        echo "Falha ao baixar o arquivo de atualização."
        exit 1
    fi

    echo "Arquivo de repositório atualizado com sucesso."
}

# Função para baixar um pacote usando quel-get
download_package() {
    local package_name=$1
    local download_dir="/tmp"
    
    echo "Procurando por $package_name nos repositórios online..."

    quel-get "$package_name"
    
    if [ $? -ne 0 ]; then
        echo "Pacote não encontrado nos repositórios online."
        exit 1
    fi

    local package_path="$download_dir/$package_name.quel"
    if [ ! -f "$package_path" ]; then
        echo "Erro ao baixar o pacote."
        exit 1
    fi

    echo "Pacote $package_name baixado com sucesso em $download_dir."
    read -p "Deseja continuar com a instalação? (S/N): " response
    if [[ "$response" != "S" && "$response" != "s" ]]; then
        rm -f "$package_path"
        echo "Download cancelado."
        exit 0
    fi

    quel -i "$package_path"
}

# Verificar se o script está sendo executado como root
check_root

# Verificar se os argumentos foram passados corretamente
if [ "$#" -ne 2 ] && [ "$#" -ne 1 ]; then
    echo "Uso: quel -i <caminho do pacote> | quel -r <nome do pacote> | quel -u | quel -d <nome do pacote>"
    exit 1
fi

# Verificar o comando
case $1 in
    -i)
        # Executar a função para descompactar e instalar o pacote
        extract_package "$2"
        install_package "$2"
        ;;
    -r)
        # Executar a função para remover o pacote
        remove_package "$2"
        ;;
    -u)
        # Executar a função para atualizar o arquivo de repositório
        update_repo_file
        ;;
    -d)
        # Executar a função para baixar o pacote usando quel-get
        download_package "$2"
        ;;
    *)
        echo "Comando desconhecido: $1"
        echo "Uso: quel -i <caminho do pacote> | quel -r <nome do pacote> | quel -u | quel -d <nome do pacote>"
        exit 1
        ;;
esac
